[
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Attendance", 
  "modified": "2016-01-12 16:48:37.002612", 
  "name": "Attendance-Client", 
  "script": "// fetch value of FingerPrint Id from Employee doctype on change of Employee field automatically\n\n// cur_frm.add_fetch(link_field, source_fieldname, target_fieldname);\ncur_frm.add_fetch(\"employee\", \"fingerprint_id\", \"fingerprint_id\");\n\nfrappe.ui.form.on(\"Attendance\", \"clock_out\",function(frm){\n\n   var clock_in  = frm.doc.clock_in;\n   var clock_out = frm.doc.clock_out;\n   \n     var time_in = clock_in.split(\":\");\n     var time_out = clock_out.split(\":\");\n     var hours = \"\";\n       for (var i = 0; i < time_in.length; i++)\n      {\n         var timein = cint(time_in[i]);\n         var timeout = cint(time_out[i]);\n         var diff = timeout - timein;\n         var str = diff.toString();\n             if( i == 0)\n             {\n                 if(!(diff) || (diff < 0 ) )\n                 { hours =  hours.concat(\"00:\");}\n             else if ((diff) && (str.length  == 2) && (diff > 0)) {hours = hours.concat(diff + \":\");}\n             else if((diff) && (str.length == 1) && (diff > 0)){ hours = hours.concat(\"0\"+diff+\":\");}\n                    \n             }\n             else if (i == 1)\n              { \n                if(!(diff) || (diff < 0) ){hours =  hours.concat(\"00:\");}\n                  \n                else if ((diff) && (str.length  == 2) && (diff > 0)) {hours = hours.concat(diff + \":\");}\n             else if((diff) && (str.length == 1) && (diff > 0)){ hours = hours.concat(\"0\"+diff+\":\");}\n          \n              }\n             else if(i == 2)\n             {\n                if(!(diff) || (diff < 0)){hours =  hours.concat(\"00\");}\n                 else if ((diff) && (str.length  == 2) && (diff > 0)) {hours = hours.concat(diff );}\n             else if((diff) && (str.length == 1) && (diff > 0)){ hours = hours.concat(\"0\"+diff);}\n             }        \n      }\nfrm.set_value(\"hours\", hours);\n\n           var time_in_hour = time_in[0];\n           var time_in_min  = time_in[1];\n           \n           var time_out_hour = time_out[0];\n           var time_out_min  = time_out[1];\n           var hour = cint(hours.substring(0,2));\n           var min  = cint (hours.substring(3,4));\n           var sec  = cint(hours.substring(7,7));\n\n            if (!(hour) && !(min) && !(sec)) {\n                 frm.set_value(\"status\", \"Absent\");\n                }\n            else if(hour > 8) {\n                  frm.set_value(\"status\", \"Present\");\n                }\n            else if ((hour < 8 && hour > 0)){\n                    if(time_in_hour > 9){\n                        frm.set_value(\"status\", \"Half Day\");\n                      }   \n             }\n   \n //Calculating Fine \n             \n            \n             \n\n\n\n});\n\n/*\n// To Calculate Fine\n\nvar calculate_fine = function(frm){\n\n// Getting All Time Detail\nvar date_and_time = frappe.datetime.get_datetime_as_string().split(\" \");\nvar actual_time = date_and_time[1];\nvar clock_in = frm.doc.clock_in;\nvar clock_out = frm.doc.clock_out;\n\n// Storing Actual Hours , Min, Sec \nvar time_arr = actual_time.split(\":\");\nvar actual_time_hour = cint(time_arr[0]);\nvar actual_time_min =  cint(time_arr[1]);\nvar actual_time_sec =  cint(time_arr[2]);\n\n// Storing Clock Out Hour, Min, Sec\nvar clock_out_arr =  clock_out.split(\":\");\nvar clock_out_hour = cint(clock_out_arr[0]);\nvar clock_out_min =  cint(clock_out_arr[1]);\nvar clock_out_sec =  cint(clock_out_arr[2]);\n\n// Storing Clock In Hour, Min, Sec\n\nvar clock_in_arr =  clock_in.split(\":\");\nvar clock_in_hour = cint(clock_in_arr[0]);\nvar clock_in_min =  cint(clock_in_arr[1]);\nvar clock_in_sec =  cint(clock_in_arr[2]);\n \n// Variable For Storing Fine\n\nvar fine  = \"\"\n       \n                  if((clock_in_hour == 08) && (clock_in_min < 30)){\n                    fine = 50;\n                     }\n                   if((clock_in_hour == 08) && (clock_in_min > 30)){\n                     fine = 100;\n                     }\n            \n}\n*/\n\n/*\nfrappe.ui.form.on(\"Attendance\", \"employee\", function(frm) {\n    cur_frm.add_fetch(\"Set Shifts\",\"start_time\" ,\"actual_intime\");\n    cur_frm.add_fetch(\"Set Shifts\",\"end_time\" ,\"actual_outtime\");\n});\n\n*/", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Deal Counter", 
  "modified": "2015-12-25 20:35:17.341960", 
  "name": "Deal Counter-Client", 
  "script": "// cur_frm.add_fetch(link_field, source_fieldname, target_fieldname);\ncur_frm.add_fetch(\"deal_num\", \"new_deal_amt\", \"deal_amt\");\n\n//Calculate Table DATA\n\nfunction calculate(frm){\nconsole.log(frm);\n var table = cur_frm.doc.carry_forward ? cur_frm.doc.carry_forward:[];\n  var total_amount = 0;\n   for(var i = 0; i<table.length; i++){\n          total_amount += table[i].deal_amt;\n    }\n\n\n  frappe.model.set_value(\"Deal Counter\", frm.docname, \"used_deal_amt\", total_amount);\n  var new_deal_amt = frm.doc.new_deal_amt;\n  var used_amt = frm.doc.used_deal_amt;\n  var balance_amt = cint(new_deal_amt - used_amt);\n  frappe.model.set_value(\"Deal Counter\", frm.docname, \"balance_amt\", balance_amt);\n\n}\n\nfrappe.ui.form.on(\"Deal Counter\",{\"onload\":function(frm, cdt ,cdn){\n\n\n calculate(frm);\n\n}\n});\n\nfrappe.ui.form.on(\"Deal Counter Item\",{\"deal_num\":function(frm, cdt, cdn)\n{\n\n  var len = frm.doc.carry_forward.length;\n  if(len > 3)\n  {\n   frappe.msgprint(frappe._(\"You Can't Enter More Than Three Items in a Table\"));\n   $(\".grid-delete-row\").click();   \n  }\n  else {\n  calculate(frm); \n}\n\n\n\n}\n});\n\nfrappe.ui.form.on(\"Deal Counter Item\",{\"carry_forward_remove\":function(frm, cdt, cdn){\n\ncalculate(frm);\n}});\n\nfrappe.ui.form.on(\"Deal Counter\", \"new_deal_amt\",function(frm){\n\n        var credit_limit = cint(frm.doc.credit_limit);\n        var new_deal_amt = cint(frm.doc.new_deal_amt);\n        if(credit_limit < new_deal_amt)\n       {\n\n       frappe.msgprint(frappe._(\"Credit Limit Can't be Less than New Deal Amount\"));\n       frappe.model.set_value(\"Deal Counter\", frm.docname, \"new_deal_amt\", 0.0);\n        }\n\n\n\n\n});\n\nfrappe.ui.form.on(\"Deal Counter\", \"new_deal_amt\", function(frm)\n\n{\ncalculate(frm);\n});\n\n\nfrappe.ui.form.on(\"Deal Counter\",{refresh:function(frm){\n\n if(cint(frm.doc.docstatus) == 1){\n   if(cint(frm.doc.balance_amt) > 0){     \n   frm.page.add_inner_button(\"Create New Sales Order\",function(){\n\n        var doc = frappe.model.get_new_doc(\"Sales Order\");\n         $.extend(doc,{\n\n         \"customer\":frm.doc.customer_name,\n         \"deal_number\":frm.docname\n        });\n           frappe.set_route(\"Form\",\"Sales Order\",doc.name);\n}).addClass(\"btn-primary\");\n      } \n   }\n}});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Petty Cash", 
  "modified": "2015-12-11 15:14:36.603392", 
  "name": "Petty Cash-Client", 
  "script": "frappe.ui.form.on(\"Petty Cash\", {\"onload\": function(frm){\n\n  frm.doc.transaction_date = frappe.datetime.get_today();\n\n}});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Sales Order", 
  "modified": "2016-01-11 18:16:08.124992", 
  "name": "Sales Order-Client", 
  "script": "frappe.ui.form.on(\"Sales Order Item\", \"price_list_rate\", function(doc, cdt, cdn){\n  var d = locals[cdt][cdn];\n\n  var price_list = frappe.model.get_value(\"Sales Order Item\", cdn, \"price_list\");\n  if ( price_list == \"\" || ! price_list){\n     frappe.model.set_value(\"Sales Order Item\", cdn, \"price_list_rate\", 0.0);\n     return;\n  }\n\n  var item_code = frappe.model.get_value(\"Sales Order Item\", cdn, \"item_code\");\n  frappe.model.get_value(\"Item Price\", {\n                     \"item_code\": item_code,\n                     \"price_list\": price_list\n                    }, 'price_list_rate', \n                    function(r){\n                         frappe.model.set_value(\"Sales Order Item\", cdn, \"price_list_rate\", r.price_list_rate);\n                    });\n   \n \n  \n  //cur_frm.fields_dict.items.grid.grid_rows_by_docname[cdn].refresh_field('price_list_rate');\n});\n\nfrappe.ui.form.on(\"Sales Order Item\", \"price_list\", function(doc, cdt, cdn){\n       var d = locals[cdt][cdn];\n       frappe.model.trigger(\"price_list_rate\", \n                      frappe.model.get_value(\"Sales Order Item\", cdn, \"price_list_rate\"), d);\n });\n\nfrappe.ui.form.on(\"Sales Order\", \"ignore_pricing_rule\", function(frm){\n \n         var check = cint(frm.doc.ignore_pricing_rule);\n \n         if(check == 1){\n         //alert(check +\" Value ON\");\n         frm.toggle_display(\"selling_price_list\", 0);  \n         frm.toggle_reqd(\"selling_price_list\", false); \n         }\n         else if (check == 0){\n         //child table rule gets hidden or disabled\n         //alert(check +\" Value OF\");\n         frm.toggle_display(\"selling_price_list\", 1);  \n         frm.toggle_reqd(\"selling_price_list\", true); \n         //frappe.meta.get_docfield(\"Sales Order Item\", \"price_list\", this.frm.docname).reqd = false;\n         //frappe.meta.get_docfield(\"Sales order Item\", \"price_list\", this.frm.docname).read_only= 0;\n         }\n });\n\nfrappe.ui.form.on(\"Sales Order\", \"customer\", function(frm) {\n    cur_frm.set_query(\"deal_number\", function() {\n        return {\n            \"filters\": {\n                \"customer_name\": (frm.doc.customer)\n            }\n        };\n    });\n});\n\nfrappe.ui.form.on(\"Sales Order Item\", \"form_render\", function(frm, cdt, cdn){\n field = cur_frm.fields_dict.items.grid.grid_rows_by_docname[cdn].docfields.filter(function(r) {return r.fieldname === 'price_list'; })[0];\n \n     if (cur_frm.doc.ignore_pricing_rule) {\n     field.read_only = false;  \n     field.visible = true;\n     field.reqd = true;\n     cur_frm.fields_dict.items.grid.grid_rows_by_docname[cdn].refresh_field('price_list');\n }\n else {\n     var sellingpl = frm.doc.selling_price_list;\n     frappe.model.set_value(cdt, cdn, \"price_list\", sellingpl);\n     //field.toggle_display = true;\n     //field.reqd = false;\n     //cur_frm.toggle_reqd(\"price_list\", false); \n     //cur_frm.get_field(\"items\").grid.toggle_reqd(\"price_list\", false);\n     //cur_frm.fields_dict.items.grid.grid_rows_by_docname[cdn].refresh_field('price_list');\n     field.read_only = true;\n     cur_frm.fields_dict.items.grid.grid_rows_by_docname[cdn].refresh_field('price_list');\n }\n \n \n });", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Stock Reconciliation", 
  "modified": "2016-01-08 18:24:45.037464", 
  "name": "Stock Reconciliation-Client", 
  "script": "// Created By Navdeep  and Tested By Nikhil\nfrappe.ui.form.on(\"Stock Reconciliation Item\",\"qty\",function(frm,cdt,cdn){\n\n        var d = locals[cdt][cdn];\n        var quantity = cint(d.qty);\n        var item_code = d.item_code;\n        var warehouse = d.warehouse;\n        var depreciation_rate = 0;\n        var last_purchase_rate= 0;\n        if(warehouse == \"Fixed Asset WareHouse - OCF\"){\n        frappe.model.get_value(\"Item\",{\"item_code\":item_code},'depreciation_rate', function(r){\n            if(r.depreciation_rate != null){\n             depreciation_rate = cint(r.depreciation_rate);\n            }\n           \n});\n        frappe.model.get_value(\"Item\",{\"item_code\":item_code},'last_purchase_rate', function(r){\n           \n           if(r.last_purchase_rate != null){\n             last_purchase_rate = cint(r.last_purchase_rate);\n             if(last_purchase_rate != 0 && depreciation_rate != 0){\n           var result = last_purchase_rate - (last_purchase_rate * depreciation_rate)/100; \n            \n                       if(quantity != 0){\n                          result = result * quantity;\n                         frappe.model.set_value(\"Stock Reconciliation Item\", d.name,\"valuation_rate\",result);\n                       \n                        }\n                   } \n            }\n});\n             }\n\n              else {\n                  frappe.model.set_value(\"Stock Reconciliation Item\", d.name,\"valuation_rate\", 00);\n}\n});\nfrappe.ui.form.on(\"Stock Reconciliation Item\",\"qty\",function(frm,cdt,cdn){\n\n        var d = locals[cdt][cdn];\n        var quantity = cint(d.qty);\n        var item_code = d.item_code;\n        var warehouse = d.warehouse;\n        var appreciation = 0;\n        var last_purchase_rate= 0;\n        if(warehouse == \"Fixed Asset WareHouse - OCF\"){\n        frappe.model.get_value(\"Item\",{\"item_code\":item_code},'appreciation', function(r){\n            if(r.appreciation != null){\n             appreciation = cint(r.appreciation);\n            }\n           \n});\n        frappe.model.get_value(\"Item\",{\"item_code\":item_code},'last_purchase_rate', function(r){\n           \n           if(r.last_purchase_rate != null){\n             last_purchase_rate = cint(r.last_purchase_rate);\n             if(last_purchase_rate != 0 && appreciation != 0){\n           var result = last_purchase_rate + (last_purchase_rate * appreciation)/100; \n            \n                       if(quantity != 0){\n                          result = result * quantity;\n                         frappe.model.set_value(\"Stock Reconciliation Item\", d.name,\"valuation_rate\",result);\n                       \n                        }\n                   } \n            }\n});\n             }\n\n              else {\n                  frappe.model.set_value(\"Stock Reconciliation Item\", d.name,\"valuation_rate\", 00);\n}\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Payment Tool", 
  "modified": "2016-01-06 20:35:27.935028", 
  "name": "Payment Tool-Client", 
  "script": "frappe.ui.form.on(\"Payment Tool\", \"tt_document_number\", function(frm) {\n\n    if(frm.doc.tt_document_number)\n    {\n        if(frm.doc.party_type === \"Customer\")\n        {\n            frappe.model.get_value(\"TT Document\", frm.doc.tt_document_number, \"customer\", \n                  function(r) { \n                       if (r.customer) {frm.set_value(\"party\", r.customer);}\n                    } );\n         \n        }\n        else  {\n            frappe.msgprint(\"Party type has to be Customer for retrieving Sales Invoices from TT Document Number\");\n            return;\n        }\n    }\n    \n});\n\nfrappe.ui.form.on(\"Payment Tool\", \"party_type\", function(frm) {\n\n    frm.trigger(\"tt_document_number\");\n});\n\nfrappe.ui.form.on(\"Payment Tool\", \"from_tt_document\", function(frm){\n     frm.set_value(\"tt_document_number\", \"\");\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "TT Document", 
  "modified": "2015-12-26 13:43:45.739531", 
  "name": "TT Document-Client", 
  "script": "function cal (frm, doc) {\nvar total_amount = 0;\nvar grand_total = 0;\nvar len =  frm.doc.outstanding_invoices ? frm.doc.outstanding_invoices.length : 0\nif(len)\n{\n    for (var i = 0;i<len;i++)\n    {\n       grand_total  += cint(frm.doc.outstanding_invoices[i].total_amount); \n       total_amount += cint(frm.doc.outstanding_invoices[i].outstanding_amount);\n    }\n}\nfrappe.model.set_value(\"TT Document\",frm.docname, \"total_amount\",total_amount);\nfrappe.model.set_value(\"TT Document\",frm.docname, \"grand_total\", grand_total);\n}\n\n\nfrappe.ui.form.on(\"TT Document\",{onload:function(frm, doc){\n\ncal(frm,doc);\n\nvar total_amount = cint(frm.doc.total_amount);\n\nif(total_amount == 0 ){\nfrappe.model.set_value(\"TT Document\",frm.docname,\"status\",\"Settled\");\n          }\nelse{\nfrappe.model.set_value(\"TT Document\",frm.docname,\"status\",\"Due for Payment\");\n}\n}\n});\n\n\nfrappe.ui.form.on(\"TT Document Detail\",{\"outstanding_invoices_remove\" : function(frm ,doc){\ncal(frm,doc);\n}\n});\n", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Commissions Rule", 
  "modified": "2016-01-07 13:32:45.358594", 
  "name": "Commissions Rule-Client", 
  "script": "frappe.ui.form.on(\"Commissions Rule\", \"validate\", function(frm) {\n    if (frm.doc.valid_from < get_today()) {\n        frappe.msgprint(__(\"You can not select past date in From Date\"));\n        //throw \"past date selected\"\n    }\n});\n", 
  "script_type": "Client"
 }
]